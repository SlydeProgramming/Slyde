/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    kotlin("jvm") version "1.8.0"
    application
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("org.graalvm.buildtools.native") version "0.10.6"
}


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
    maven{ url = uri("https://jitpack.io")}
    maven{ url = uri("https://raw.githubusercontent.com/graalvm/native-build-tools/snapshots") }
    gradlePluginPortal()
    
}

dependencies {
    implementation(kotlin("stdlib"))
    implementation("org.antlr:antlr4-runtime:4.13.2")


    // This dependency is used by the application.
    implementation(libs.guava)
}

val graalToolchain = java.toolchain

graalvmNative {
    binaries {
        named("main") {
            javaLauncher.set(
                javaToolchains.launcherFor {
                    languageVersion.set(JavaLanguageVersion.of(21))
                    vendor.set(JvmVendorSpec.GRAAL_VM)
                }
            )
            imageName.set("slyde")
            buildArgs.add("--no-fallback")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor.set(JvmVendorSpec.GRAAL_VM)
    }
}

application {
    // Define the main class for the application.
    mainClass.set("slyde.App")
}

tasks.named<JavaExec>("run") {
    workingDir = file("C:/Users/every/Documents/Github/Slyde") // Set the working directory
}

tasks.jar {
    manifest {
        attributes(
            "Main-Class" to "slyde.App"
        )
    }
}